# Generated by Django 3.1.1 on 2021-03-29 22:38

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AlmacenEmailInforme',
            fields=[
                ('muestra', models.IntegerField(db_column='MUESTRA', primary_key=True, serialize=False)),
                ('informe', models.IntegerField(db_column='INFORME')),
                ('cliente', models.CharField(db_column='CLIENTE', max_length=255)),
                ('pdf', models.TextField(blank=True, db_column='PDF', null=True)),
            ],
            options={
                'db_table': 'almacen_email_informe',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AlmacenEmailRecepcion',
            fields=[
                ('muestra', models.IntegerField(db_column='MUESTRA', primary_key=True, serialize=False)),
                ('informe', models.IntegerField(db_column='INFORME')),
                ('procedencia', models.CharField(db_column='PROCEDENCIA', max_length=50)),
                ('cantidad', models.CharField(db_column='CANTIDAD', max_length=30)),
                ('analisis', models.CharField(db_column='ANALISIS', max_length=255)),
                ('memoria', models.CharField(db_column='MEMORIA', max_length=30)),
                ('cliente', models.CharField(db_column='CLIENTE', max_length=255)),
                ('recepcionador', models.CharField(db_column='RECEPCIONADOR', max_length=30)),
                ('fecha_recepcion', models.CharField(db_column='FECHA_RECEPCION', max_length=255)),
                ('fecha_recogida', models.CharField(db_column='FECHA_RECOGIDA', max_length=255)),
                ('referencia', models.CharField(blank=True, db_column='REFERENCIA', max_length=255, null=True)),
                ('observaciones', models.TextField(blank=True, db_column='OBSERVACIONES', null=True)),
                ('estado', models.CharField(blank=True, db_column='ESTADO', max_length=30, null=True)),
                ('correccion', models.CharField(db_column='CORRECCION', max_length=1)),
                ('motivo', models.CharField(blank=True, db_column='MOTIVO', max_length=255, null=True)),
            ],
            options={
                'db_table': 'almacen_email_recepcion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AnalisisTablas',
            fields=[
                ('nombre', models.CharField(db_column='NOMBRE', max_length=25, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'analisis_tablas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Analiticas',
            fields=[
                ('analisis_id', models.IntegerField(db_column='ANALISIS_ID', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=50)),
                ('prefijo', models.CharField(db_column='PREFIJO', max_length=7)),
                ('observaciones', models.CharField(blank=True, db_column='OBSERVACIONES', max_length=100, null=True)),
            ],
            options={
                'db_table': 'analiticas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ausencias',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('dia', models.DateField(blank=True, db_column='DIA', null=True)),
                ('id_user', models.IntegerField(blank=True, db_column='ID_USER', null=True)),
                ('motivo', models.CharField(blank=True, db_column='MOTIVO', max_length=30, null=True)),
            ],
            options={
                'db_table': 'ausencias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Balanzas',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('codigo', models.CharField(db_column='CODIGO', max_length=30)),
                ('error', models.FloatField(db_column='ERROR')),
            ],
            options={
                'db_table': 'balanzas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CalibracionQuantulus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('medida', models.CharField(db_column='MEDIDA', max_length=30)),
                ('quantulus', models.CharField(db_column='QUANTULUS', max_length=30)),
                ('valor1', models.FloatField(db_column='VALOR1')),
                ('valor2', models.FloatField(db_column='VALOR2')),
            ],
            options={
                'db_table': 'calibracion_quantulus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CantidadesAgregadasRadioDesecacion',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('id_alicuota', models.IntegerField(db_column='ID_ALICUOTA')),
                ('fecha', models.DateTimeField(db_column='FECHA')),
                ('volumen', models.FloatField(db_column='VOLUMEN')),
                ('tecnico', models.CharField(db_column='TECNICO', max_length=30)),
            ],
            options={
                'db_table': 'cantidades_agregadas_radio_desecacion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Clientes',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=255)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=300, null=True)),
                ('direccion', models.CharField(blank=True, db_column='DIRECCION', max_length=150, null=True)),
                ('telefono', models.CharField(blank=True, db_column='TELEFONO', max_length=15, null=True)),
                ('fax', models.CharField(blank=True, db_column='FAX', max_length=15, null=True)),
                ('email', models.CharField(blank=True, db_column='EMAIL', max_length=50, null=True)),
                ('persona_contacto', models.CharField(blank=True, db_column='PERSONA_CONTACTO', max_length=50, null=True)),
                ('nif', models.CharField(blank=True, db_column='NIF', max_length=15, null=True)),
                ('idioma', models.CharField(blank=True, db_column='IDIOMA', max_length=2, null=True)),
            ],
            options={
                'db_table': 'clientes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CodMuestras',
            fields=[
                ('mues_id', models.AutoField(db_column='MUES_ID', primary_key=True, serialize=False)),
                ('codigo', models.CharField(db_column='CODIGO', max_length=3)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=100)),
                ('etiquetas', models.IntegerField(db_column='ETIQUETAS')),
                ('nombre_pt', models.CharField(db_column='NOMBRE_PT', max_length=100)),
            ],
            options={
                'db_table': 'cod_muestras',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Conductivimetros',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('codigo', models.CharField(db_column='CODIGO', max_length=30)),
                ('error', models.IntegerField(db_column='ERROR')),
            ],
            options={
                'db_table': 'conductivimetros',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeterminacionElementosEstables',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=50)),
            ],
            options={
                'db_table': 'determinacion_elementos_estables',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Determinaciones',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=50)),
            ],
            options={
                'db_table': 'determinaciones',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeterminacionesProgramadas',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('muestra_prog_id', models.IntegerField(db_column='MUESTRA_PROG_ID')),
                ('determinacion', models.IntegerField(db_column='DETERMINACION')),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=100, null=True)),
            ],
            options={
                'db_table': 'determinaciones_programadas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EstadoMuestras',
            fields=[
                ('identificador_estado', models.IntegerField(db_column='IDENTIFICADOR_ESTADO', primary_key=True, serialize=False)),
                ('descripcion', models.CharField(db_column='DESCRIPCION', max_length=100)),
            ],
            options={
                'db_table': 'estado_muestras',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FechasDeterminacionProgramada',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('dia_inicio', models.DateField(blank=True, db_column='DIA_INICIO', null=True)),
                ('dia_fin', models.DateField(blank=True, db_column='DIA_FIN', null=True)),
                ('dia_semana', models.CharField(blank=True, db_column='DIA_SEMANA', max_length=30, null=True)),
                ('meses', models.IntegerField(blank=True, db_column='MESES', null=True)),
                ('enero', models.IntegerField(blank=True, db_column='ENERO', null=True)),
                ('febrero', models.IntegerField(blank=True, db_column='FEBRERO', null=True)),
                ('marzo', models.IntegerField(blank=True, db_column='MARZO', null=True)),
                ('abril', models.IntegerField(blank=True, db_column='ABRIL', null=True)),
                ('mayo', models.IntegerField(blank=True, db_column='MAYO', null=True)),
                ('junio', models.IntegerField(blank=True, db_column='JUNIO', null=True)),
                ('julio', models.IntegerField(blank=True, db_column='JULIO', null=True)),
                ('agosto', models.IntegerField(blank=True, db_column='AGOSTO', null=True)),
                ('septiembre', models.IntegerField(blank=True, db_column='SEPTIEMBRE', null=True)),
                ('octubre', models.IntegerField(blank=True, db_column='OCTUBRE', null=True)),
                ('noviembre', models.IntegerField(blank=True, db_column='NOVIEMBRE', null=True)),
                ('diciembre', models.IntegerField(blank=True, db_column='DICIEMBRE', null=True)),
            ],
            options={
                'db_table': 'fechas_determinacion_programada',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FrecuenciaRecogida',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=30)),
            ],
            options={
                'db_table': 'frecuencia_recogida',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricoAlicuotasControles',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('tipo_control', models.CharField(db_column='TIPO_CONTROL', max_length=10)),
                ('codigo', models.CharField(db_column='CODIGO', max_length=10)),
                ('id_alicuota', models.IntegerField(db_column='ID_ALICUOTA')),
                ('id_alicuota_generadora', models.IntegerField(db_column='ID_ALICUOTA_GENERADORA')),
            ],
            options={
                'db_table': 'historico_alicuotas_controles',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='HistoricoRecogida',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('codigo_barras', models.CharField(blank=True, db_column='CODIGO_BARRAS', max_length=50, null=True)),
                ('cliente', models.IntegerField(db_column='CLIENTE')),
                ('fecha_hora_recogida', models.DateTimeField(db_column='FECHA_HORA_RECOGIDA')),
                ('fecha_hora_recogida_2', models.DateTimeField(db_column='FECHA_HORA_RECOGIDA_2')),
                ('fecha_hora_recogida_ref', models.DateTimeField(db_column='FECHA_HORA_RECOGIDA_REF')),
                ('fecha_hora_recepcion', models.DateTimeField(blank=True, db_column='FECHA_HORA_RECEPCION', null=True)),
                ('referencia_cliente', models.CharField(blank=True, db_column='REFERENCIA_CLIENTE', max_length=250, null=True)),
                ('comentarios', models.TextField(blank=True, db_column='COMENTARIOS', null=True)),
                ('fecha_hora_recepcion_prevista', models.DateTimeField(blank=True, db_column='FECHA_HORA_RECEPCION_PREVISTA', null=True)),
                ('foto', models.CharField(blank=True, db_column='FOTO', max_length=150, null=True)),
                ('cod_antiguo', models.CharField(blank=True, db_column='COD_ANTIGUO', max_length=60, null=True)),
            ],
            options={
                'db_table': 'historico_recogida',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InfoPrograma',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('version', models.FloatField(db_column='VERSION')),
                ('cambios', models.CharField(blank=True, db_column='CAMBIOS', max_length=5000, null=True)),
                ('updater', models.CharField(blank=True, db_column='UPDATER', max_length=200, null=True)),
            ],
            options={
                'db_table': 'info_programa',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InformacionMemorias',
            fields=[
                ('memoria', models.CharField(db_column='MEMORIA', max_length=2, primary_key=True, serialize=False)),
                ('codigo_csn', models.CharField(db_column='CODIGO_CSN', max_length=3)),
                ('analisis', models.CharField(db_column='ANALISIS', max_length=10)),
                ('nom_mues', models.CharField(blank=True, db_column='NOM_MUES', max_length=50, null=True)),
                ('unidad', models.CharField(blank=True, db_column='UNIDAD', max_length=10, null=True)),
                ('total', models.IntegerField(blank=True, db_column='TOTAL', null=True)),
                ('num_mues', models.IntegerField(blank=True, db_column='NUM_MUES', null=True)),
                ('procedencia', models.CharField(db_column='PROCEDENCIA', max_length=100)),
                ('fichero', models.CharField(blank=True, db_column='FICHERO', max_length=30, null=True)),
                ('f_recogida', models.DateField(db_column='F_RECOGIDA')),
                ('comentario', models.CharField(blank=True, db_column='COMENTARIO', max_length=100, null=True)),
                ('f_fin', models.DateField(blank=True, db_column='F_FIN', null=True)),
                ('f_medida', models.DateField(blank=True, db_column='F_MEDIDA', null=True)),
                ('t_mues', models.IntegerField(blank=True, db_column='T_MUES', null=True)),
                ('deposito', models.FloatField(blank=True, db_column='DEPOSITO', null=True)),
                ('volumen', models.FloatField(blank=True, db_column='VOLUMEN', null=True)),
                ('ac_esp', models.FloatField(blank=True, db_column='AC_ESP', null=True)),
                ('error_ac', models.FloatField(blank=True, db_column='ERROR_AC', null=True)),
                ('ac_br_esp', models.FloatField(blank=True, db_column='AC_BR_ESP', null=True)),
                ('err_ac_br', models.FloatField(blank=True, db_column='ERR_AC_BR', null=True)),
                ('lid', models.FloatField(blank=True, db_column='LID', null=True)),
                ('rendimiento', models.FloatField(blank=True, db_column='RENDIMIENTO', null=True)),
            ],
            options={
                'db_table': 'informacion_memorias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Isotopos',
            fields=[
                ('identificador', models.IntegerField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('isotopo', models.CharField(db_column='ISOTOPO', max_length=10)),
            ],
            options={
                'db_table': 'isotopos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Laboratorios',
            fields=[
                ('identificador', models.IntegerField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('laboratorio', models.CharField(db_column='LABORATORIO', max_length=50)),
                ('color', models.CharField(db_column='COLOR', max_length=30)),
            ],
            options={
                'db_table': 'laboratorios',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Memorias',
            fields=[
                ('codigo_memoria', models.CharField(db_column='CODIGO_MEMORIA', max_length=3, primary_key=True, serialize=False)),
                ('memoria', models.CharField(db_column='MEMORIA', max_length=50)),
                ('base_datos_geslab', models.CharField(db_column='BASE_DATOS_GESLAB', max_length=50)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=100, null=True)),
                ('ajuste_semana', models.IntegerField(blank=True, db_column='AJUSTE_SEMANA', null=True)),
            ],
            options={
                'db_table': 'memorias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MuestraActualCodigo',
            fields=[
                ('codigo', models.CharField(db_column='CODIGO', max_length=10, primary_key=True, serialize=False)),
                ('posicion', models.IntegerField(db_column='POSICION')),
                ('duplicada', models.IntegerField(db_column='DUPLICADA')),
                ('duplicada_pos', models.IntegerField(db_column='DUPLICADA_POS')),
                ('control', models.IntegerField(db_column='CONTROL')),
                ('control_pos', models.IntegerField(db_column='CONTROL_POS')),
                ('blanco', models.IntegerField(db_column='BLANCO')),
                ('blanco_pos', models.IntegerField(db_column='BLANCO_POS')),
                ('tiempo_en_lab', models.IntegerField(db_column='TIEMPO_EN_LAB')),
            ],
            options={
                'db_table': 'muestra_actual_codigo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MuestrasProgramadas',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('memoria', models.CharField(db_column='MEMORIA', max_length=3)),
                ('cod_csn', models.IntegerField(blank=True, db_column='COD_CSN', null=True)),
                ('procedencia', models.IntegerField(db_column='PROCEDENCIA')),
                ('frecuencia', models.IntegerField(db_column='FRECUENCIA')),
                ('tipo_muestra', models.IntegerField(db_column='TIPO_MUESTRA')),
                ('referencia', models.CharField(blank=True, db_column='REFERENCIA', max_length=255, null=True)),
                ('cliente', models.IntegerField(db_column='CLIENTE')),
                ('suministra', models.IntegerField(blank=True, db_column='SUMINISTRA', null=True)),
            ],
            options={
                'db_table': 'muestras_programadas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ParametrosAnaliticas',
            fields=[
                ('identificador', models.IntegerField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=30)),
                ('descripcion', models.CharField(db_column='DESCRIPCION', max_length=100)),
            ],
            options={
                'db_table': 'parametros_analiticas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ParametrosMuestra',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=50)),
                ('unidades', models.CharField(blank=True, db_column='UNIDADES', max_length=15, null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=100, null=True)),
            ],
            options={
                'db_table': 'parametros_muestra',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PerfilesDeUsuarios',
            fields=[
                ('identificador', models.IntegerField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('descripcion', models.CharField(db_column='DESCRIPCION', max_length=50)),
            ],
            options={
                'db_table': 'perfiles_de_usuarios',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Phmetros',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('codigo', models.CharField(db_column='CODIGO', max_length=30)),
                ('error', models.FloatField(db_column='ERROR')),
            ],
            options={
                'db_table': 'phmetros',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Presupuestos',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('id_cliente', models.IntegerField(blank=True, db_column='ID_CLIENTE', null=True)),
                ('fecha', models.DateField(blank=True, db_column='FECHA', null=True)),
                ('activo', models.IntegerField(blank=True, db_column='ACTIVO', null=True)),
            ],
            options={
                'db_table': 'presupuestos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Procedencias',
            fields=[
                ('codigo', models.IntegerField(db_column='CODIGO', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=100)),
            ],
            options={
                'db_table': 'procedencias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RadionucleidosTrazadores',
            fields=[
                ('codigo_trazador', models.CharField(db_column='CODIGO_TRAZADOR', max_length=30, primary_key=True, serialize=False)),
                ('radionucleido', models.CharField(db_column='RADIONUCLEIDO', max_length=10)),
                ('actividad', models.FloatField(blank=True, db_column='ACTIVIDAD', null=True)),
                ('fecha_referencia', models.DateTimeField(blank=True, db_column='FECHA_REFERENCIA', null=True)),
            ],
            options={
                'db_table': 'radionucleidos_trazadores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecogidaGeneral',
            fields=[
                ('identificador', models.IntegerField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('observaciones', models.CharField(blank=True, db_column='OBSERVACIONES', max_length=150, null=True)),
            ],
            options={
                'db_table': 'recogida_general',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegistroAsistencia',
            fields=[
                ('id_user', models.IntegerField(db_column='ID_USER', primary_key=True, serialize=False)),
                ('empresa', models.CharField(blank=True, db_column='EMPRESA', max_length=20, null=True)),
                ('dia', models.DateField(blank=True, db_column='DIA', null=True)),
                ('hora', models.DateTimeField(db_column='HORA')),
                ('registro', models.CharField(blank=True, db_column='REGISTRO', max_length=255, null=True)),
                ('fecha_carga', models.DateTimeField(blank=True, db_column='FECHA_CARGA', null=True)),
                ('horas_trabajadas', models.FloatField(blank=True, db_column='HORAS_TRABAJADAS', null=True)),
            ],
            options={
                'db_table': 'registro_asistencia',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionAnaliticasTratamiento',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('id_muestra_analitica', models.IntegerField(db_column='ID_MUESTRA_ANALITICA')),
                ('tratamiento', models.IntegerField(db_column='TRATAMIENTO')),
                ('cod_reducido', models.CharField(db_column='COD_REDUCIDO', max_length=30)),
                ('fecha_inicio', models.DateTimeField(db_column='FECHA_INICIO')),
                ('fecha_fin', models.DateTimeField(blank=True, db_column='FECHA_FIN', null=True)),
                ('analista', models.IntegerField(db_column='ANALISTA')),
                ('paso_actual', models.IntegerField(db_column='PASO_ACTUAL')),
            ],
            options={
                'db_table': 'relacion_analiticas_tratamiento',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionControlesTratamientos',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('tipo_control', models.CharField(db_column='TIPO_CONTROL', max_length=10)),
                ('codigo', models.CharField(db_column='CODIGO', max_length=10)),
                ('id_muestra_historico', models.IntegerField(db_column='ID_MUESTRA_HISTORICO')),
            ],
            options={
                'db_table': 'relacion_controles_tratamientos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionDetectoresAlfabeta',
            fields=[
                ('id_detector', models.CharField(db_column='ID_DETECTOR', max_length=3, primary_key=True, serialize=False)),
                ('eficiencia', models.FloatField(db_column='EFICIENCIA')),
            ],
            options={
                'db_table': 'relacion_detectores_alfabeta',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionHistoricoMuestraAnaliticas',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('codigo_barras', models.CharField(blank=True, db_column='CODIGO_BARRAS', max_length=50, null=True)),
                ('fecha_hora_entrega', models.DateTimeField(blank=True, db_column='FECHA_HORA_ENTREGA', null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=100, null=True)),
                ('alicuota', models.CharField(db_column='ALICUOTA', max_length=30)),
                ('cantidad_muestra_analizada', models.FloatField(blank=True, db_column='CANTIDAD_MUESTRA_ANALIZADA', null=True)),
                ('incidencia', models.CharField(blank=True, db_column='INCIDENCIA', max_length=200, null=True)),
            ],
            options={
                'db_table': 'relacion_historico_muestra_analiticas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionHistoricoParametrosMuestra',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('valor', models.CharField(db_column='VALOR', max_length=25)),
                ('comentarios', models.CharField(blank=True, db_column='COMENTARIOS', max_length=100, null=True)),
            ],
            options={
                'db_table': 'relacion_historico_parametros_muestra',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionIncidencias',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('id_muestra', models.IntegerField(blank=True, db_column='ID_MUESTRA', null=True)),
                ('id_alicuota', models.IntegerField(db_column='ID_ALICUOTA')),
                ('medida', models.CharField(blank=True, db_column='MEDIDA', max_length=30, null=True)),
                ('motivo', models.CharField(blank=True, db_column='MOTIVO', max_length=300, null=True)),
                ('responsable', models.CharField(blank=True, db_column='RESPONSABLE', max_length=30, null=True)),
                ('fecha_incidencia', models.DateTimeField(blank=True, db_column='FECHA_INCIDENCIA', null=True)),
            ],
            options={
                'db_table': 'relacion_incidencias',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionInformesCorreccion',
            fields=[
                ('informe_nuevo', models.IntegerField(db_column='INFORME_NUEVO', primary_key=True, serialize=False)),
                ('codigo_muestra_asociada', models.CharField(db_column='CODIGO_MUESTRA_ASOCIADA', max_length=50)),
                ('informe_antiguo', models.IntegerField(db_column='INFORME_ANTIGUO')),
                ('fecha_correccion', models.DateTimeField(db_column='FECHA_CORRECCION')),
            ],
            options={
                'db_table': 'relacion_informes_correccion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionInformesGenerados',
            fields=[
                ('id_muestra', models.CharField(db_column='ID_MUESTRA', max_length=30, primary_key=True, serialize=False)),
                ('informe', models.CharField(db_column='INFORME', max_length=30)),
                ('cliente', models.CharField(blank=True, db_column='CLIENTE', max_length=255, null=True)),
                ('referencia', models.CharField(blank=True, db_column='REFERENCIA', max_length=255, null=True)),
                ('fecha_emision', models.DateField(blank=True, db_column='FECHA_EMISION', null=True)),
            ],
            options={
                'db_table': 'relacion_informes_generados',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionInformesMuestra',
            fields=[
                ('identificador', models.IntegerField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('codigo_muestra_asociada', models.CharField(db_column='CODIGO_MUESTRA_ASOCIADA', max_length=50)),
                ('anio', models.IntegerField(db_column='ANIO')),
            ],
            options={
                'db_table': 'relacion_informes_muestra',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionKBetaBetaresto',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('id_alicuota_br', models.IntegerField(db_column='ID_ALICUOTA_BR')),
                ('id_alicuota_k', models.IntegerField(db_column='ID_ALICUOTA_K')),
                ('id_alicuota_b', models.IntegerField(db_column='ID_ALICUOTA_B')),
                ('resultado', models.FloatField(db_column='RESULTADO')),
                ('error', models.FloatField(blank=True, db_column='ERROR', null=True)),
                ('tiempo_cuenta', models.IntegerField(blank=True, db_column='TIEMPO_CUENTA', null=True)),
            ],
            options={
                'db_table': 'relacion_k_beta_betaresto',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionMuestraAsalvo',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('codigo_muestra', models.IntegerField(blank=True, db_column='CODIGO_MUESTRA', null=True)),
                ('codigo_fichero', models.CharField(blank=True, db_column='CODIGO_FICHERO', max_length=30, null=True)),
                ('detector', models.IntegerField(blank=True, db_column='DETECTOR', null=True)),
                ('fecha_hora_correccion', models.DateTimeField(blank=True, db_column='FECHA_HORA_CORRECCION', null=True)),
                ('fecha_rec_inicial', models.DateField(blank=True, db_column='FECHA_REC_INICIAL', null=True)),
                ('fecha_hora_analisis', models.DateTimeField(blank=True, db_column='FECHA_HORA_ANALISIS', null=True)),
                ('fecha_rec_final', models.DateField(blank=True, db_column='FECHA_REC_FINAL', null=True)),
                ('cantidad', models.IntegerField(blank=True, db_column='CANTIDAD', null=True)),
                ('unidades', models.CharField(blank=True, db_column='UNIDADES', max_length=11, null=True)),
                ('tiempo', models.IntegerField(blank=True, db_column='TIEMPO', null=True)),
                ('isotopo', models.CharField(blank=True, db_column='ISOTOPO', max_length=11, null=True)),
                ('actividad', models.FloatField(blank=True, db_column='ACTIVIDAD', null=True)),
                ('error', models.FloatField(blank=True, db_column='ERROR', null=True)),
                ('lid', models.FloatField(blank=True, db_column='LID', null=True)),
            ],
            options={
                'db_table': 'relacion_muestra_asalvo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionMuestraProgramadaFecha',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'relacion_muestra_programada_fecha',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionParametrosAnalitica',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('id_analitica', models.IntegerField(db_column='ID_ANALITICA')),
                ('id_parametro_analitica', models.IntegerField(db_column='ID_PARAMETRO_ANALITICA')),
                ('valor', models.CharField(db_column='VALOR', max_length=50)),
                ('comentarios', models.CharField(blank=True, db_column='COMENTARIOS', max_length=50, null=True)),
            ],
            options={
                'db_table': 'relacion_parametros_analitica',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionPresupuestosAnalisis',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('id_presupuesto', models.IntegerField(blank=True, db_column='ID_PRESUPUESTO', null=True)),
                ('analisis', models.CharField(blank=True, db_column='ANALISIS', max_length=30, null=True)),
                ('num_muestras', models.IntegerField(blank=True, db_column='NUM_MUESTRAS', null=True)),
                ('precio', models.IntegerField(blank=True, db_column='PRECIO', null=True)),
                ('total', models.IntegerField(blank=True, db_column='TOTAL', null=True)),
            ],
            options={
                'db_table': 'relacion_presupuestos_analisis',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionProcedimientosResponsables',
            fields=[
                ('procedimiento', models.CharField(db_column='PROCEDIMIENTO', max_length=30, primary_key=True, serialize=False)),
                ('responsable', models.CharField(db_column='RESPONSABLE', max_length=30)),
                ('sustituto_1', models.CharField(db_column='SUSTITUTO_1', max_length=30)),
                ('sustituto_2', models.CharField(blank=True, db_column='SUSTITUTO_2', max_length=30, null=True)),
                ('sustituto_3', models.CharField(blank=True, db_column='SUSTITUTO_3', max_length=30, null=True)),
                ('descripcion', models.CharField(blank=True, db_column='DESCRIPCION', max_length=300, null=True)),
            ],
            options={
                'db_table': 'relacion_procedimientos_responsables',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionResultadosSeleccionados',
            fields=[
                ('id_historico_recogida', models.IntegerField(db_column='ID_HISTORICO_RECOGIDA', primary_key=True, serialize=False)),
                ('id_alicuota', models.IntegerField(db_column='ID_ALICUOTA')),
                ('resultado', models.CharField(db_column='RESULTADO', max_length=30)),
                ('tipo', models.CharField(blank=True, db_column='TIPO', max_length=80, null=True)),
                ('idasociado', models.IntegerField(db_column='IDASOCIADO')),
                ('usuario', models.CharField(blank=True, db_column='USUARIO', max_length=30, null=True)),
            ],
            options={
                'db_table': 'relacion_resultados_seleccionados',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionResultadosSeleccionadosCorreccion',
            fields=[
                ('id_historico_recogida', models.IntegerField(db_column='ID_HISTORICO_RECOGIDA', primary_key=True, serialize=False)),
                ('id_alicuota', models.IntegerField(db_column='ID_ALICUOTA')),
                ('resultado', models.CharField(db_column='RESULTADO', max_length=30)),
                ('tipo', models.CharField(blank=True, db_column='TIPO', max_length=80, null=True)),
                ('idasociado', models.IntegerField(db_column='IDASOCIADO')),
                ('fecha', models.DateTimeField(db_column='FECHA')),
            ],
            options={
                'db_table': 'relacion_resultados_seleccionados_correccion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionSuministradorSuministro',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('id_suministrador', models.IntegerField(db_column='ID_SUMINISTRADOR')),
                ('id_tipo_suministro', models.IntegerField(db_column='ID_TIPO_SUMINISTRO')),
            ],
            options={
                'db_table': 'relacion_suministrador_suministro',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionTipoDeterminacionParamRequer',
            fields=[
                ('tipo_muestra', models.IntegerField(db_column='TIPO_MUESTRA', primary_key=True, serialize=False)),
                ('determinacion', models.IntegerField(db_column='DETERMINACION')),
                ('param_requerido_1', models.IntegerField(blank=True, db_column='PARAM_REQUERIDO_1', null=True)),
                ('param_requerido_2', models.IntegerField(blank=True, db_column='PARAM_REQUERIDO_2', null=True)),
                ('param_requerido_3', models.IntegerField(blank=True, db_column='PARAM_REQUERIDO_3', null=True)),
                ('param_requerido_4', models.IntegerField(blank=True, db_column='PARAM_REQUERIDO_4', null=True)),
            ],
            options={
                'db_table': 'relacion_tipo_determinacion_param_requer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionTipoMuestraDeterminacionCantidad',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('id_tipo_muestra', models.IntegerField(db_column='ID_TIPO_MUESTRA')),
                ('id_determinacion', models.IntegerField(db_column='ID_DETERMINACION')),
                ('valor', models.FloatField(blank=True, db_column='VALOR', null=True)),
                ('unidad', models.CharField(db_column='UNIDAD', max_length=30)),
                ('formula', models.CharField(blank=True, db_column='FORMULA', max_length=255, null=True)),
            ],
            options={
                'db_table': 'relacion_tipo_muestra_determinacion_cantidad',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionTratamientoAlfabetaResultado',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('id_alicuota', models.IntegerField(db_column='ID_ALICUOTA')),
                ('cod_reducido', models.CharField(db_column='COD_REDUCIDO', max_length=30)),
                ('parametro', models.CharField(blank=True, db_column='PARAMETRO', max_length=23, null=True)),
                ('actividad', models.FloatField(db_column='ACTIVIDAD')),
                ('amd', models.FloatField(db_column='AMD')),
                ('incertidumbre', models.FloatField(db_column='INCERTIDUMBRE')),
                ('detector', models.CharField(db_column='DETECTOR', max_length=3)),
                ('fecha', models.DateTimeField(blank=True, db_column='FECHA', null=True)),
                ('tiempo_cuenta', models.IntegerField(blank=True, db_column='TIEMPO_CUENTA', null=True)),
            ],
            options={
                'db_table': 'relacion_tratamiento_alfabeta_resultado',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionTratamientoRegistroResultado',
            fields=[
                ('quantulus', models.CharField(blank=True, db_column='QUANTULUS', max_length=30, null=True)),
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('id_analitica', models.IntegerField(db_column='ID_ANALITICA')),
                ('fondo', models.CharField(blank=True, db_column='FONDO', max_length=5, null=True)),
                ('ctime', models.IntegerField(db_column='CTIME')),
                ('numciclos', models.IntegerField(db_column='NUMCICLOS')),
                ('numciclosleidos', models.IntegerField(db_column='NUMCICLOSLEIDOS')),
                ('codalicuota', models.CharField(db_column='CODALICUOTA', max_length=30)),
                ('numfuera', models.IntegerField(db_column='NUMFUERA')),
                ('factorcorreccion', models.FloatField(blank=True, db_column='FACTORCORRECCION', null=True)),
                ('cp0', models.FloatField(blank=True, db_column='CP0', null=True)),
                ('sqp0', models.FloatField(blank=True, db_column='SQP0', null=True)),
                ('fuera0', models.IntegerField(db_column='FUERA0')),
                ('fecha0', models.DateTimeField(blank=True, db_column='FECHA0', null=True)),
                ('cp1', models.FloatField(blank=True, db_column='CP1', null=True)),
                ('sqp1', models.FloatField(blank=True, db_column='SQP1', null=True)),
                ('fuera1', models.IntegerField(db_column='FUERA1')),
                ('fecha1', models.DateTimeField(blank=True, db_column='FECHA1', null=True)),
                ('cp2', models.FloatField(blank=True, db_column='CP2', null=True)),
                ('sqp2', models.FloatField(blank=True, db_column='SQP2', null=True)),
                ('fuera2', models.IntegerField(db_column='FUERA2')),
                ('fecha2', models.DateTimeField(blank=True, db_column='FECHA2', null=True)),
                ('cp3', models.FloatField(blank=True, db_column='CP3', null=True)),
                ('sqp3', models.FloatField(blank=True, db_column='SQP3', null=True)),
                ('fuera3', models.IntegerField(db_column='FUERA3')),
                ('fecha3', models.DateTimeField(blank=True, db_column='FECHA3', null=True)),
                ('cp4', models.FloatField(blank=True, db_column='CP4', null=True)),
                ('sqp4', models.FloatField(blank=True, db_column='SQP4', null=True)),
                ('fuera4', models.IntegerField(db_column='FUERA4')),
                ('fecha4', models.DateTimeField(blank=True, db_column='FECHA4', null=True)),
                ('cp5', models.FloatField(blank=True, db_column='CP5', null=True)),
                ('sqp5', models.FloatField(blank=True, db_column='SQP5', null=True)),
                ('fuera5', models.IntegerField(db_column='FUERA5')),
                ('fecha5', models.DateTimeField(blank=True, db_column='FECHA5', null=True)),
                ('cp6', models.FloatField(blank=True, db_column='CP6', null=True)),
                ('sqp6', models.FloatField(blank=True, db_column='SQP6', null=True)),
                ('fuera6', models.IntegerField(db_column='FUERA6')),
                ('fecha6', models.DateTimeField(blank=True, db_column='FECHA6', null=True)),
                ('cp7', models.FloatField(blank=True, db_column='CP7', null=True)),
                ('sqp7', models.FloatField(blank=True, db_column='SQP7', null=True)),
                ('fuera7', models.IntegerField(db_column='FUERA7')),
                ('fecha7', models.DateTimeField(blank=True, db_column='FECHA7', null=True)),
                ('cp8', models.FloatField(blank=True, db_column='CP8', null=True)),
                ('sqp8', models.FloatField(blank=True, db_column='SQP8', null=True)),
                ('fuera8', models.IntegerField(db_column='FUERA8')),
                ('fecha8', models.DateTimeField(blank=True, db_column='FECHA8', null=True)),
                ('cp9', models.FloatField(blank=True, db_column='CP9', null=True)),
                ('sqp9', models.FloatField(blank=True, db_column='SQP9', null=True)),
                ('fuera9', models.IntegerField(db_column='FUERA9')),
                ('fecha9', models.DateTimeField(blank=True, db_column='FECHA9', null=True)),
                ('cp10', models.FloatField(blank=True, db_column='CP10', null=True)),
                ('sqp10', models.FloatField(blank=True, db_column='SQP10', null=True)),
                ('fuera10', models.IntegerField(db_column='FUERA10')),
                ('fecha10', models.DateTimeField(blank=True, db_column='FECHA10', null=True)),
                ('cp11', models.FloatField(blank=True, db_column='CP11', null=True)),
                ('sqp11', models.FloatField(blank=True, db_column='SQP11', null=True)),
                ('fuera11', models.IntegerField(db_column='FUERA11')),
                ('fecha11', models.DateTimeField(blank=True, db_column='FECHA11', null=True)),
            ],
            options={
                'db_table': 'relacion_tratamiento_registro_resultado',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionTratamientoResultadoIcp',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('id_analitica', models.IntegerField(db_column='ID_ANALITICA')),
                ('concentracion_muestra_icp', models.FloatField(db_column='CONCENTRACION_MUESTRA_ICP')),
                ('concentracion_muestra', models.FloatField(db_column='CONCENTRACION_MUESTRA')),
                ('dilucion', models.IntegerField(db_column='DILUCION')),
                ('lq', models.FloatField(db_column='LQ')),
                ('error', models.FloatField(db_column='ERROR')),
                ('codigo_reducido_duplicada', models.CharField(db_column='CODIGO_REDUCIDO_DUPLICADA', max_length=30)),
                ('concentracion_muestra_primera', models.FloatField(db_column='CONCENTRACION_MUESTRA_PRIMERA')),
                ('concentracion_muestra_duplicada', models.FloatField(db_column='CONCENTRACION_MUESTRA_DUPLICADA')),
                ('fecha_medida', models.DateTimeField(db_column='FECHA_MEDIDA')),
            ],
            options={
                'db_table': 'relacion_tratamiento_resultado_icp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportAsistencia',
            fields=[
                ('usuario', models.CharField(db_column='USUARIO', max_length=30, primary_key=True, serialize=False)),
                ('semana', models.IntegerField(db_column='SEMANA')),
                ('anio', models.IntegerField(db_column='ANIO')),
                ('horas', models.FloatField(blank=True, db_column='HORAS', null=True)),
                ('porcentaje', models.CharField(blank=True, db_column='PORCENTAJE', max_length=11, null=True)),
                ('dias_ausencia', models.IntegerField(blank=True, db_column='DIAS_AUSENCIA', null=True)),
            ],
            options={
                'db_table': 'report_asistencia',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportRealDecretoDit',
            fields=[
                ('radionuclido', models.CharField(db_column='RADIONUCLIDO', max_length=100, primary_key=True, serialize=False)),
                ('procedimiento', models.CharField(db_column='PROCEDIMIENTO', max_length=100)),
                ('fecha', models.CharField(db_column='FECHA', max_length=30)),
                ('actividad', models.CharField(db_column='ACTIVIDAD', max_length=30)),
                ('amd', models.CharField(db_column='AMD', max_length=30)),
                ('tiempo_medida', models.CharField(db_column='TIEMPO_MEDIDA', max_length=30)),
                ('cantidad_muestra', models.CharField(db_column='CANTIDAD_MUESTRA', max_length=30)),
                ('rendimiento_quimico', models.CharField(db_column='RENDIMIENTO_QUIMICO', max_length=30)),
            ],
            options={
                'db_table': 'report_real_decreto_dit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportRealDecretoGenerico',
            fields=[
                ('cliente', models.CharField(db_column='CLIENTE', max_length=100)),
                ('desc_cliente', models.CharField(db_column='DESC_CLIENTE', max_length=300)),
                ('direccion', models.CharField(db_column='DIRECCION', max_length=300)),
                ('telefono', models.CharField(db_column='TELEFONO', max_length=100)),
                ('fax', models.CharField(db_column='FAX', max_length=100)),
                ('email', models.CharField(db_column='EMAIL', max_length=100)),
                ('tipo_muestra', models.CharField(db_column='TIPO_MUESTRA', max_length=100)),
                ('id_muestra', models.IntegerField(db_column='ID_MUESTRA', primary_key=True, serialize=False)),
                ('procedencia', models.CharField(db_column='PROCEDENCIA', max_length=100)),
                ('ref_cliente', models.CharField(db_column='REF_CLIENTE', max_length=100)),
                ('fecha_recogida', models.CharField(db_column='FECHA_RECOGIDA', max_length=100)),
                ('fecha_recepcion', models.CharField(db_column='FECHA_RECEPCION', max_length=100)),
                ('observaciones', models.TextField(db_column='OBSERVACIONES')),
                ('informe', models.IntegerField(db_column='INFORME')),
                ('dia_informe', models.CharField(db_column='DIA_INFORME', max_length=30)),
                ('mes_informe', models.CharField(db_column='MES_INFORME', max_length=30)),
                ('anio_informe', models.CharField(db_column='ANIO_INFORME', max_length=30)),
                ('dit', models.CharField(db_column='DIT', max_length=3)),
                ('titulo_informe', models.CharField(blank=True, db_column='TITULO_INFORME', max_length=300, null=True)),
                ('nota_medidas', models.CharField(blank=True, db_column='NOTA_MEDIDAS', max_length=1000, null=True)),
                ('modificacion', models.CharField(blank=True, db_column='MODIFICACION', max_length=255, null=True)),
                ('anio_informe_db', models.CharField(blank=True, db_column='ANIO_INFORME_DB', max_length=30, null=True)),
                ('aspectos_criterio', models.CharField(blank=True, db_column='ASPECTOS_CRITERIO', max_length=9999, null=True)),
                ('aspectos_explicativos', models.CharField(blank=True, db_column='ASPECTOS_EXPLICATIVOS', max_length=9999, null=True)),
            ],
            options={
                'db_table': 'report_real_decreto_generico',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportRealDecretoMedidas',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indice', models.IntegerField(db_column='INDICE')),
                ('radionuclido', models.CharField(db_column='RADIONUCLIDO', max_length=100)),
                ('procedimiento', models.CharField(db_column='PROCEDIMIENTO', max_length=100)),
                ('fecha', models.CharField(db_column='FECHA', max_length=30)),
                ('actividad', models.CharField(db_column='ACTIVIDAD', max_length=30)),
                ('amd', models.CharField(db_column='AMD', max_length=30)),
                ('tiempo_medida', models.CharField(db_column='TIEMPO_MEDIDA', max_length=30)),
                ('cantidad_muestra', models.CharField(db_column='CANTIDAD_MUESTRA', max_length=30)),
                ('rendimiento_quimico', models.CharField(db_column='RENDIMIENTO_QUIMICO', max_length=30)),
            ],
            options={
                'db_table': 'report_real_decreto_medidas',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ReportSemana',
            fields=[
                ('id_user', models.IntegerField(db_column='ID_USER', primary_key=True, serialize=False)),
                ('semana', models.IntegerField(db_column='SEMANA')),
                ('anio', models.IntegerField(db_column='ANIO')),
                ('horas', models.FloatField(blank=True, db_column='HORAS', null=True)),
                ('correcto', models.IntegerField(blank=True, db_column='CORRECTO', null=True)),
                ('porcentaje', models.FloatField(blank=True, db_column='PORCENTAJE', null=True)),
            ],
            options={
                'db_table': 'report_semana',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SituacionRecepcion',
            fields=[
                ('identificador', models.IntegerField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('coprecipitacion_actual', models.IntegerField(db_column='COPRECIPITACION ACTUAL')),
                ('desecacion_actual', models.IntegerField(db_column='DESECACION ACTUAL')),
            ],
            options={
                'db_table': 'situacion_recepcion',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Suministradores',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=255)),
                ('direccion', models.CharField(blank=True, db_column='DIRECCION', max_length=150, null=True)),
                ('telefono', models.CharField(blank=True, db_column='TELEFONO', max_length=15, null=True)),
                ('fax', models.CharField(blank=True, db_column='FAX', max_length=15, null=True)),
                ('email', models.CharField(blank=True, db_column='EMAIL', max_length=50, null=True)),
                ('persona_contacto', models.CharField(blank=True, db_column='PERSONA_CONTACTO', max_length=50, null=True)),
                ('nif', models.CharField(blank=True, db_column='NIF', max_length=15, null=True)),
            ],
            options={
                'db_table': 'suministradores',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TipoDeMuestras',
            fields=[
                ('tipo_muestra_id', models.IntegerField(db_column='TIPO_MUESTRA_ID', primary_key=True, serialize=False)),
                ('descripcion', models.CharField(db_column='DESCRIPCION', max_length=50)),
                ('medida_cantidad', models.CharField(blank=True, db_column='MEDIDA_CANTIDAD', max_length=50, null=True)),
                ('param_requerido_1', models.IntegerField(blank=True, db_column='PARAM_REQUERIDO_1', null=True)),
                ('param_requerido_2', models.IntegerField(blank=True, db_column='PARAM_REQUERIDO_2', null=True)),
                ('param_requerido_3', models.IntegerField(blank=True, db_column='PARAM_REQUERIDO_3', null=True)),
                ('param_requerido_4', models.IntegerField(blank=True, db_column='PARAM_REQUERIDO_4', null=True)),
            ],
            options={
                'db_table': 'tipo_de_muestras',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tratamiento',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('descripcion', models.CharField(db_column='DESCRIPCION', max_length=100)),
                ('medida', models.CharField(db_column='MEDIDA', max_length=5)),
                ('tiempo_en_lab', models.IntegerField(db_column='TIEMPO_EN_LAB')),
                ('alcance', models.FloatField(blank=True, db_column='ALCANCE', null=True)),
            ],
            options={
                'db_table': 'tratamiento',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Usuarios',
            fields=[
                ('identificador', models.AutoField(db_column='IDENTIFICADOR', primary_key=True, serialize=False)),
                ('dni', models.CharField(db_column='DNI', max_length=10)),
                ('nombre', models.CharField(db_column='NOMBRE', max_length=30)),
                ('login', models.CharField(db_column='LOGIN', max_length=256)),
                ('activo', models.TextField(db_column='ACTIVO')),
                ('telegram', models.CharField(blank=True, db_column='TELEGRAM', max_length=60, null=True)),
            ],
            options={
                'db_table': 'usuarios',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UsuariosAsistencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_user', models.IntegerField(blank=True, db_column='ID_USER', null=True)),
                ('nombre', models.CharField(blank=True, db_column='NOMBRE', max_length=30, null=True)),
                ('turno', models.CharField(blank=True, db_column='TURNO', max_length=30, null=True)),
                ('jornada', models.FloatField(blank=True, db_column='JORNADA', null=True)),
            ],
            options={
                'db_table': 'usuarios_asistencia',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ValoresAnalisisPresupuesto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analisis', models.CharField(blank=True, db_column='ANALISIS', max_length=30, null=True)),
            ],
            options={
                'db_table': 'valores_analisis_presupuesto',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionAnalisisGamma',
            fields=[
                ('id_histo_muestra_analitica', models.OneToOneField(db_column='ID_HISTO_MUESTRA_ANALITICA', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='gestionmuestras.relacionhistoricomuestraanaliticas')),
            ],
            options={
                'db_table': 'relacion_analisis_gamma',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RelacionAnalisisTablas',
            fields=[
                ('id_analisis', models.OneToOneField(db_column='ID_ANALISIS', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='gestionmuestras.analiticas')),
            ],
            options={
                'db_table': 'relacion_analisis_tablas',
                'managed': False,
            },
        ),
    ]
