"""
Django settings for weblaruex project.

Generated by 'django-admin startproject' using Django 3.0.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import configparser


config = configparser.ConfigParser()
#config.read('config.ini')
config.read('config.ini')

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&9huy&v22h!vfoj=oqrsuha0gb-8=&uv3-&%4vavee#m36k3at'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['158.49.111.36','alerta2.sytes.net','vraex.sytes.net', '127.0.0.1', 'alerta2.es', '172.20.36.42', 'laruex.com', 'www.alerta2.es']

#X_FRAME_OPTIONS = 'SAMEORIGIN'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'jsonify',
    'background_task',
    # apps propias instaladas
    'public',
    'structure',
    'calendario_guardias',
    'copuma',
    'rare',
    'gestionmuestras',
    'spida',
    'spd',
    'docLaruex',
    'veiex',

    # edici√≥n de noticias
    'ckeditor',
    # 'ckeditor_wordcount',

    # para poder editar el ckeditor
    'widget_tweaks',

    # para poder usar reCaptcha
    'captcha',
]

CRYSPY_TEMPLATE_PACK = 'bootstrap4'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

FILE_UPLOAD_HANDLERS = [
    "django.core.files.uploadhandler.MemoryFileUploadHandler",
    "django.core.files.uploadhandler.TemporaryFileUploadHandler"
]

ROOT_URLCONF = 'weblaruex.urls'
RUTA_DESARROLLO = 'D:/OneDrive/Escritorio/servidor/'
RUTA_PRODUCCION = '/home/alerta2/'
RUTA_ACTIVA = RUTA_DESARROLLO
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            RUTA_ACTIVA+'weblaruex/weblaruex/templates',
            RUTA_ACTIVA+'weblaruex/public/templates',
            RUTA_ACTIVA+'weblaruex/structure/templates',
            RUTA_ACTIVA+'weblaruex/dronemap/templates',
            RUTA_ACTIVA+'weblaruex/copuma/templates',
            RUTA_ACTIVA+'weblaruex/rare/templates',
            RUTA_ACTIVA+'weblaruex/gestionmuestras/templates',
            RUTA_ACTIVA+'weblaruex/tesis/templates',
            RUTA_ACTIVA+'weblaruex/spida/templates',
            RUTA_ACTIVA+'weblaruex/spd/templates',
            RUTA_ACTIVA+'weblaruex/docLaruex/templates',
            RUTA_ACTIVA+'weblaruex/veiex/templates',
            ],
        #'DIRS': ['/var/www/html/mysite/admin/templates','/var/www/html/mysite/gestion_memoria/template','/var/www/html/mysite/SPIDA/template'],

        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'weblaruex.wsgi.application'

TOKEN_TELEGRAM = config.get('telegram', 'token')
ID_CHAT_GUARDIAS = config.get('telegram', 'id_chat_guardias')


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': config.get('db_django', 'database'),
        'USER': config.get('db_django', 'user'),
        'PASSWORD': config.get('db_django', 'password'),
        'HOST': config.get('db_django', 'host'),   # Or an IP Address that your DB is hosted on
        'PORT': config.get('db_django', 'port'),
    },
    'rvra': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': config.get('db_rvra', 'database'),
            'USER': config.get('db_rvra', 'user'),
            'PASSWORD': config.get('db_rvra', 'password'),
            'HOST': config.get('db_rvra', 'host'),   # Or an IP Address that your DB is hosted on
            'PORT': config.get('db_rvra', 'port'),
            'OPTIONS': {
                'isolation_level': "repeatable read",
            },
        },
    'rvra_historico': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': config.get('db_rvra_historico', 'database'),
            'USER': config.get('db_rvra_historico', 'user'),
            'PASSWORD': config.get('db_rvra_historico', 'password'),
            'HOST': config.get('db_rvra_historico', 'host'),   # Or an IP Address that your DB is hosted on
            'PORT': config.get('db_rvra_historico', 'port'),
            'OPTIONS': {
                'isolation_level': "repeatable read",
            },
        },

    'spida': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': config.get('db_spida', 'database'),
            'USER': config.get('db_spida', 'user'),
            'PASSWORD': config.get('db_spida', 'password'),
            'HOST': config.get('db_spida', 'host'),   # Or an IP Address that your DB is hosted on
            'PORT': config.get('db_spida', 'port'),
        },
    'gestion_muestras': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': config.get('db_gestion_muestras', 'database'),
            'USER': config.get('db_gestion_muestras', 'user'),
            'PASSWORD': config.get('db_gestion_muestras', 'password'),
            'HOST': config.get('db_gestion_muestras', 'host'),   # Or an IP Address that your DB is hosted on
            'PORT': config.get('db_gestion_muestras', 'port'),
        },
    'estaciones': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': config.get('db_estaciones', 'database'),
            'USER': config.get('db_estaciones', 'user'),
            'PASSWORD': config.get('db_estaciones', 'password'),
            'HOST': config.get('db_estaciones', 'host'),   # Or an IP Address that your DB is hosted on
            'PORT': config.get('db_estaciones', 'port'),
        },
    'gestion_memoria': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': config.get('db_gestion_memoria', 'database'),
            'USER': config.get('db_gestion_memoria', 'user'),
            'PASSWORD': config.get('db_gestion_memoria', 'password'),
            'HOST': config.get('db_gestion_memoria', 'host'),   # Or an IP Address that your DB is hosted on
            'PORT': config.get('db_gestion_memoria', 'port'),
        },
    'drone': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'dbdrone.db'),
        },
    'csn': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': config.get('db_csn', 'database'),
            'USER': config.get('db_csn', 'user'),
            'PASSWORD': config.get('db_csn', 'password'),
            'HOST': config.get('db_csn', 'host'),   # Or an IP Address that your DB is hosted on
            'PORT': config.get('db_csn', 'port'),
    },
    'spida_web': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': config.get('db_spida_web', 'database'),
            'USER': config.get('db_spida_web', 'user'),
            'PASSWORD': config.get('db_spida_web', 'password'),
            'HOST': config.get('db_spida_web', 'host'),   # Or an IP Address that your DB is hosted on
            'PORT': config.get('db_spida_web', 'port'),
    },
    'spd': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': config.get('db_spd', 'database'),
            'USER': config.get('db_spd', 'user'),
            'PASSWORD': config.get('db_spd', 'password'),
            'HOST': config.get('db_spd', 'host'),   # Or an IP Address that your DB is hosted on
            'PORT': config.get('db_spd', 'port'),
    },
    'guardias': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': config.get('db_guardias', 'database'),
            'USER': config.get('db_guardias', 'user'),
            'PASSWORD': config.get('db_guardias', 'password'),
            'HOST': config.get('db_guardias', 'host'),   # Or an IP Address that your DB is hosted on
            'PORT': config.get('db_guardias', 'port'),
    },
    'docLaruex': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': config.get('db_docLaruex', 'database'),
            'USER': config.get('db_docLaruex', 'user'),
            'PASSWORD': config.get('db_docLaruex', 'password'),
            'HOST': config.get('db_docLaruex', 'host'),   # Or an IP Address that your DB is hosted on
            'PORT': config.get('db_docLaruex', 'port'),
    },
    'veiex': {
            'ENGINE': 'django.db.backends.mysql',
            'NAME': config.get('db_veiex', 'database'),
            'USER': config.get('db_veiex', 'user'),
            'PASSWORD': config.get('db_veiex', 'password'),
            'HOST': config.get('db_veiex', 'host'),   # Or an IP Address that your DB is hosted on
            'PORT': config.get('db_veiex', 'port'),
    }





}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/
TIME_ZONE = 'UTC'
USE_I18N = True
USE_L10N = True
USE_TZ = True

from django.utils.translation import gettext_lazy as _

LANGUAGE_CODE = 'es'

LANGUAGES = (
    ('en', _('English')),
    ('es', _('Spanish')),
    ('pt', _('Portuguese')),
    ('de', _('German')),
    ('zh', _('Chinese')),
    ('ja', _('Japanese')),
    ('ru', _('Rusian')),
)

LOCALE_PATHS = (
    os.path.join(BASE_DIR, 'locale/'),
)

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
#STATIC_ROOT = os.path.join(BASE_DIR, 'static/img/')
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')



'''
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static/'),
    os.path.join(BASE_DIR, 'weblaruex/static/'),
    os.path.join(BASE_DIR, 'dronemap/static/'),
    os.path.join(BASE_DIR, 'copuma/static/'),
    os.path.join(BASE_DIR, 'rare/static/'),
    os.path.join(BASE_DIR, 'tesis/static/'),
    os.path.join(BASE_DIR, 'spida/static/'), 
    os.path.join(BASE_DIR, 'public/static/'),
]
'''

LOGIN_REDIRECT_URL = '/'

MEDIA_ROOT = '/home/alerta2/weblaruex/media'
MEDIA_URL = 'media/'

#CONFIGURACION DE GMAIL
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = config.get('email_config', 'HOST')
EMAIL_USE_TLS = True
EMAIL_PORT = config.getint('email_config', 'PORT')
EMAIL_HOST_USER = config.get('email_config', 'hostUser')
EMAIL_HOST_PASSWORD = config.get('email_config', 'hostPassword')
EMAIL_CURSOS_GESTOR = config.get('email_config', 'gestorCursos')
EMAIL_NOTICIAS_GESTOR = config.get('email_config', 'gestorNoticias')
EMAIL_WEB_PUBLICA_GESTOR = config.get('email_config', 'gestorAlertasWebPublica')
EMAIL_PUBLICACIONES_GESTOR = config.get('email_config', 'gestorCursos')


# configuracion de ckeditor
CKEDITOR_UPLOAD_PATH = 'uploads/'
CKEDITOR_IMAGE_BACKEND = 'pillow'

# configuraci√≥n de reCaptcha
RECAPTCHA_SITE_KEY = config.get('recaptcha', 'publicKey')
RECAPTCHA_SECRET_KEY = config.get('recaptcha', 'privateKey')
RECAPTCHA_REQUIRED_SCORE = 0.85
SILENCED_SYSTEM_CHECKS = ['captcha.recaptcha_test_key_error']




CKEDITOR_CONFIGS = {
    'default': {
        'height': 'auto',
        'width': 'auto',
        'toolbar': 'Custom',
        'skin': 'office2013',
        'toolbar_custom': [
		{ 'name': 'clipboard', 'items': [ 'clipboard', 'undo' ] },
		{ 'name': 'editing', 'items': [ 'find', 'selection', 'spellchecker', 'editing' ] },
		{ 'name': 'basicstyles', 'items': [ 'basicstyles', 'cleanup' ] },
        { 'name': 'insert', 'items': [ 'insert' ] },
		{ 'name': 'colors', 'items': [ 'colors' ] },
		{ 'name': 'links', 'items': [ 'link' ] }, 
		{ 'name': 'document', 'items': [ 'document', 'doctools', 'mode' ] },
		{ 'name': 'styles', 'items': [ 'styles' ] },
		{ 'name': 'paragraph', 'items': [ 'list', 'indent', 'blocks', 'align', 'bidi', 'paragraph' ] },
		{ 'name': 'tools', 'items': [ 'tools' ] },
		{ 'name': 'others', 'items': [ 'others' ] },
        ],
        'removeButtons': 'About,Save,NewPage,Templates,Form,Checkbox,Radio,TextField,Textarea,Select,Button,ImageButton,HiddenField,CreateDiv,Flash,HorizontalRule,PageBreak,ShowBlocks,CopyFormatting,RemoveFormat,Maximize',
        
        'contentsCss': [
            '/static/ckeditor/ckeditor/skins/office2013/editor.css',  # Aseg√∫rate de que la ruta sea correcta
        ],
        
        'extraPlugins': 'wordcount, link',
        'wordcount': {
            'showCharCount': True,
            'showWordCount': True,
            'maxCharCount': 9000, # Establece aqu√≠ el l√≠mite m√°ximo de caracteres deseado
            'countSpacesAsChars': True, # Cuenta los espacios como caracteres
            'hardLimit': True, # Establece el l√≠mite m√°ximo de caracteres
        },
        # 'wordcount_maxLimit': 90,  # Establece aqu√≠ el l√≠mite m√°ximo de caracteres deseado
        # 'wordcount_maxCharCountMsg': 'Has alcanzado el l√≠mite m√°ximo de caracteres.',


    }
}
